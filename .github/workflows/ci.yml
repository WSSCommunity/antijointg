name: build
on: [push, pull_request]
jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: set up go 1.21
      uses: actions/setup-go@v3
      with:
        go-version: "1.21"
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: build and test
      run: |
        go test -v -timeout=100s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
        cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "mocks" | grep -v "_mock" > $GITHUB_WORKSPACE/profile.cov
      env:
        GO111MODULE: on
        TZ: "America/Chicago"
        GOFLAGS: "-mod=vendor"

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

    - name: install goveralls
      run: go install github.com/mattn/goveralls@latest

    - name: submit coverage
      run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: build and deploy master image to ghcr.io and dockerhub
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push \
            --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            -t ghcr.io/${USERNAME}/tg-spam:${ref} -t ${USERNAME}/tg-spam:${ref} .

    - name: deploy tagged (latest) to ghcr.io and dockerhub
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push \
            --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            -t ghcr.io/${USERNAME}/tg-spam:${ref} -t ghcr.io/${USERNAME}/tg-spam:latest \
            -t ${USERNAME}/tg-spam:${ref} -t ${USERNAME}/tg-spam:latest .

    - name: remote deployment from master
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      env:
        UPDATER_KEY: ${{ secrets.UPDATER_KEY }}
      run: curl https://radio-t.com/updater/update/tg-spam/${UPDATER_KEY}
