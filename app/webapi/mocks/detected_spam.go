// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"github.com/umputun/tg-spam/app/storage"
	"sync"
)

// DetectedSpamReaderMock is a mock implementation of webapi.DetectedSpamReader.
//
//	func TestSomethingThatUsesDetectedSpamReader(t *testing.T) {
//
//		// make and configure a mocked webapi.DetectedSpamReader
//		mockedDetectedSpamReader := &DetectedSpamReaderMock{
//			ReadFunc: func() ([]storage.DetectedSpamInfo, error) {
//				panic("mock out the Read method")
//			},
//		}
//
//		// use mockedDetectedSpamReader in code that requires webapi.DetectedSpamReader
//		// and then make assertions.
//
//	}
type DetectedSpamReaderMock struct {
	// ReadFunc mocks the Read method.
	ReadFunc func() ([]storage.DetectedSpamInfo, error)

	// calls tracks calls to the methods.
	calls struct {
		// Read holds details about calls to the Read method.
		Read []struct {
		}
	}
	lockRead sync.RWMutex
}

// Read calls ReadFunc.
func (mock *DetectedSpamReaderMock) Read() ([]storage.DetectedSpamInfo, error) {
	if mock.ReadFunc == nil {
		panic("DetectedSpamReaderMock.ReadFunc: method is nil but DetectedSpamReader.Read was just called")
	}
	callInfo := struct {
	}{}
	mock.lockRead.Lock()
	mock.calls.Read = append(mock.calls.Read, callInfo)
	mock.lockRead.Unlock()
	return mock.ReadFunc()
}

// ReadCalls gets all the calls that were made to Read.
// Check the length with:
//
//	len(mockedDetectedSpamReader.ReadCalls())
func (mock *DetectedSpamReaderMock) ReadCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockRead.RLock()
	calls = mock.calls.Read
	mock.lockRead.RUnlock()
	return calls
}

// ResetReadCalls reset all the calls that were made to Read.
func (mock *DetectedSpamReaderMock) ResetReadCalls() {
	mock.lockRead.Lock()
	mock.calls.Read = nil
	mock.lockRead.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *DetectedSpamReaderMock) ResetCalls() {
	mock.lockRead.Lock()
	mock.calls.Read = nil
	mock.lockRead.Unlock()
}
